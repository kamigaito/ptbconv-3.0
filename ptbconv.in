#!@RUBY@
$prefix = '@prefix@'
$version = '@VERSION@'
$lib    = '%s/lib/ruby' % $prefix
$: << $lib
require 'optparse'
require '%s/natural_language/corpus/penn_treebank/sparser' % $lib
require '%s/common.rb' % $prefix
opts = ARGV.getopts("vgthBVCDHTP", "N:", "R:", "Z:1")
unless opts
  show_help
end

show_help if opts["h"]
show_version if opts["v"]
$index_of_first_word = opts["Z"].to_i
require '%s/trace' % $prefix if opts["t"]
require '%s/enable_gaps' % $prefix if opts["g"]

require '%s/%s' % [$prefix, opts["R"]] if opts["R"]
show_head_rules if opts["H"]
show_explanations_of_each_tag if opts["T"]
DependencyStructure = NaturalLanguage::ParseTree::DependencyStructure

sp = NaturalLanguage::Corpus::PennTreebank::SformParser.new
num_of_sentences = 1

begin
  while _tree = sp.parse

    if opts["N"]
      next if num_of_sentences < opts["N"].to_i
      exit if num_of_sentences > opts["N"].to_i
    end
    
    puts "# %s-th sentence" % num_of_sentences if opts["V"] 
    if (num_of_sentences % 100) == 0 
      $stderr.print '*' 
    elsif (num_of_sentences % 20) == 0
      $stderr.print '.'
    end
    $stderr.puts " %6s sentences done." % num_of_sentences if (num_of_sentences % 500) == 0 
    _tree = reduce_unary(_tree) 
    _tree.post_order do |_node|
      next if _node.terminal?
      _node.find_head
    end

    show_bracket(_tree) if opts["B"]
    show_cfg(_tree) if opts["C"]
    show_tree_path(_tree)  if opts["P"]
    
    if opts["D"] # converting into dependency trees
      _tree = to_dependency(_tree) 
      show_dependencies(_tree)
    end

    _tree.show if opts["V"]
    
    num_of_sentences += 1
  end
rescue Exception
  puts "There are some errors in the %s-th sentence." % num_of_sentences
  raise
end
$stderr.puts "\n%6s sentences done, finish." % (num_of_sentences - 1)
